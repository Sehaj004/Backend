{
    "openapi": "3.0.1",
    "info": {
        "title": "Robot Controller API",
        "description": "New backend service that provides resources for the Moon robot simulator.",
        "contact": {
            "name": "Anshpreet Singh",
            "email": "anshpreet4762.be22@deakin.edu.au"
        }
    },
    "paths": {
        "/api/maps": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "Endpoint to fetch all maps.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Map"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Map"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Map"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Maps"
                ],
                "summary": "Endpoint to add a new map.",
                "requestBody": {
                    "description": "The new map.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/maps/square": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "Endpoint to fetch square maps.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Map"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Map"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Map"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/maps/{id}": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "Endpoint to fetch a map by its ID.",
                "operationId": "MapsRoute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the map.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "put": {
                "tags": [
                    "Maps"
                ],
                "summary": "Endpoint to update a map.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the map to update.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updated map data.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Maps"
                ],
                "summary": "Endpoint to delete a map.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the map to delete.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/maps/{id}/{x}-{y}": {
            "get": {
                "tags": [
                    "Maps"
                ],
                "summary": "Endpoint to check if map index is valid.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the map.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "x",
                        "in": "path",
                        "description": "The X coordinate of the map index.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "y",
                        "in": "path",
                        "description": "The Y coordinate of the map index.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/robot-commands": {
            "get": {
                "tags": [
                    "RobotCommands"
                ],
                "summary": "Endpoint to fetch all robot commands.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RobotCommand"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RobotCommand"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RobotCommand"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "RobotCommands"
                ],
                "summary": "Endpoint to add a new command.",
                "requestBody": {
                    "description": "The new robot command.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/robot-commands/move": {
            "get": {
                "tags": [
                    "RobotCommands"
                ],
                "summary": "Endpoint to fetch move commands.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RobotCommand"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RobotCommand"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RobotCommand"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/robot-commands/{id}": {
            "get": {
                "tags": [
                    "RobotCommands"
                ],
                "summary": "Endpoint to fetch a command by its ID.",
                "operationId": "GetRobotCommands",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the command.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "RobotCommands"
                ],
                "summary": "Endpoint to update a command.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the command to update.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updated command data.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "RobotCommands"
                ],
                "summary": "Endpoint to delete a command.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the command to delete.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/WeatherForecast": {
            "get": {
                "tags": [
                    "WeatherForecast"
                ],
                "operationId": "GetWeatherForecast",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WeatherForecast"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WeatherForecast"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WeatherForecast"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Map": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "columns": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            },
            "RobotCommand": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isMoveCommand": {
                        "type": "boolean"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "WeatherForecast": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "temperatureC": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "temperatureF": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            }
        }
    }
}